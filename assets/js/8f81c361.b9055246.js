"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5617],{3881:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(8101);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},5545:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"type":"mdx","permalink":"/test","source":"@site/src/pages/test.md","description":"\u5b89\u88c5nvm","frontMatter":{},"unlisted":false}');var i=t(5105),s=t(3881);const o={},a=void 0,l={},c=[{value:"\u5b89\u88c5nvm",id:"\u5b89\u88c5nvm",level:2},{value:"\u5b89\u88c5pnpm",id:"\u5b89\u88c5pnpm",level:2},{value:"pnpm\u4e0enodejs\u7684\u517c\u5bb9\u6027",id:"pnpm\u4e0enodejs\u7684\u517c\u5bb9\u6027",level:2},{value:"pnpm\u6362\u6e90",id:"pnpm\u6362\u6e90",level:2},{value:"\u6362\u963f\u91cc\u6e90",id:"\u6362\u963f\u91cc\u6e90",level:3},{value:"\u5b98\u65b9\u6e90",id:"\u5b98\u65b9\u6e90",level:3},{value:"\u67e5\u770b\u5f53\u524d\u4f7f\u7528\u7684\u6e90",id:"\u67e5\u770b\u5f53\u524d\u4f7f\u7528\u7684\u6e90",level:3},{value:"\u5b89\u88c5\u4f9d\u8d56",id:"\u5b89\u88c5\u4f9d\u8d56",level:2},{value:"\u7f16\u8bd1",id:"\u7f16\u8bd1",level:2},{value:"\u8fd0\u884c",id:"\u8fd0\u884c",level:2},{value:"\u521b\u5efatsconfig.json\u6587\u4ef6",id:"\u521b\u5efatsconfigjson\u6587\u4ef6",level:2},{value:"Debug\u4ee3\u7801",id:"debug\u4ee3\u7801",level:2},{value:"\xa0\u9519\u8bef\u89e3\u51b3\u65b9\u6848",id:"\u9519\u8bef\u89e3\u51b3\u65b9\u6848",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\u5b89\u88c5nvm",children:"\u5b89\u88c5nvm"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"window\u641c\u7d22nvm windows"}),"\n",(0,i.jsx)(n.li,{children:"linux\u641c\u7d22nvm"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u5b89\u88c5pnpm",children:"\u5b89\u88c5pnpm"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"npm install -g pnpm"})}),"\n",(0,i.jsx)(n.h2,{id:"pnpm\u4e0enodejs\u7684\u517c\u5bb9\u6027",children:"pnpm\u4e0enodejs\u7684\u517c\u5bb9\u6027"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Node.js"}),(0,i.jsx)(n.th,{children:"pnpm 7"}),(0,i.jsx)(n.th,{children:"pnpm 8"}),(0,i.jsx)(n.th,{children:"pnpm 9"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Node.js 12"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Node.js 14"}),(0,i.jsx)(n.td,{children:"\u2714\ufe0f"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Node.js 16"}),(0,i.jsx)(n.td,{children:"\u2714\ufe0f"}),(0,i.jsx)(n.td,{children:"\u2714\ufe0f"}),(0,i.jsx)(n.td,{children:"\u274c"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Node.js 18"}),(0,i.jsx)(n.td,{children:"\u2714\ufe0f"}),(0,i.jsx)(n.td,{children:"\u2714\ufe0f"}),(0,i.jsx)(n.td,{children:"\u2714\ufe0f"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Node.js 20"}),(0,i.jsx)(n.td,{children:"\u2714\ufe0f"}),(0,i.jsx)(n.td,{children:"\u2714\ufe0f"}),(0,i.jsx)(n.td,{children:"\u2714\ufe0f"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"pnpm\u6362\u6e90",children:"pnpm\u6362\u6e90"}),"\n",(0,i.jsx)(n.h3,{id:"\u6362\u963f\u91cc\u6e90",children:"\u6362\u963f\u91cc\u6e90"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm config set registry https://registry.npmmirror.com\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u5b98\u65b9\u6e90",children:"\u5b98\u65b9\u6e90"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm config set registry https://registry.npmjs.org\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u67e5\u770b\u5f53\u524d\u4f7f\u7528\u7684\u6e90",children:"\u67e5\u770b\u5f53\u524d\u4f7f\u7528\u7684\u6e90"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm get registry\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u5b89\u88c5\u4f9d\u8d56",children:"\u5b89\u88c5\u4f9d\u8d56"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm install --registry=https://registry.npmmirror.com\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'\xa0 \xa0 "@credo-ts/askar": "0.5.9",\n\n\xa0 \xa0 "@credo-ts/core": "0.5.9",\n\n\xa0 \xa0 "@credo-ts/drpc": "0.5.9",\n\n\xa0 \xa0 "@credo-ts/indy-vdr": "0.5.9",\n\n\xa0 \xa0 "@credo-ts/push-notifications": "0.7.0",\n\n\xa0 \xa0 "@credo-ts/question-answer": "0.5.9",\n\n\xa0 \xa0 "@credo-ts/react-native": "0.5.9",\n\n\xa0 \xa0 "@hyperledger/aries-askar-react-native": "0.2.3",\n\n\xa0 \xa0 "@hyperledger/indy-vdr-react-native": "0.2.2"\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"typescript",children:"Typescript"}),"\n",(0,i.jsx)(n.h2,{id:"\u7f16\u8bd1",children:"\u7f16\u8bd1"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"tsc hello.ts"})}),"\n",(0,i.jsx)(n.h2,{id:"\u8fd0\u884c",children:"\u8fd0\u884c"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"node hello.js"})}),"\n",(0,i.jsx)(n.h2,{id:"\u521b\u5efatsconfigjson\u6587\u4ef6",children:"\u521b\u5efatsconfig.json\u6587\u4ef6"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"tsc --init"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n\n\xa0 "compilerOptions": {\n\n\xa0 \xa0 /* Visit https://aka.ms/tsconfig to read more about this file */\n\n  \n\n\xa0 \xa0 /* Projects */\n\n\xa0 \xa0 // "incremental": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Save .tsbuildinfo files to allow for incremental compilation of projects. */\n\n\xa0 \xa0 // "composite": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Enable constraints that allow a TypeScript project to be used with project references. */\n\n\xa0 \xa0 // "tsBuildInfoFile": "./.tsbuildinfo", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Specify the path to .tsbuildinfo incremental compilation file. */\n\n\xa0 \xa0 // "disableSourceOfProjectReferenceRedirect": true, \xa0/* Disable preferring source files instead of declaration files when referencing composite projects. */\n\n\xa0 \xa0 // "disableSolutionSearching": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Opt a project out of multi-project reference checking when editing. */\n\n\xa0 \xa0 // "disableReferencedProjectLoad": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Reduce the number of projects loaded automatically by TypeScript. */\n\n  \n\n\xa0 \xa0 /* Language and Environment */\n\n\xa0 \xa0 // \u751f\u6210\u7684JS\u7248\u672c\uff0c2016\u7248\u672c\u517c\u5bb9\u6027\u6bd4\u8f83\u597d\n\n\xa0 \xa0 "target": "es2016", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */\n\n\xa0 \xa0 // "lib": [], \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Specify a set of bundled library declaration files that describe the target runtime environment. */\n\n\xa0 \xa0 // "jsx": "preserve", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Specify what JSX code is generated. */\n\n\xa0 \xa0 // "experimentalDecorators": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Enable experimental support for legacy experimental decorators. */\n\n\xa0 \xa0 // "emitDecoratorMetadata": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Emit design-type metadata for decorated declarations in source files. */\n\n\xa0 \xa0 // "jsxFactory": "", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Specify the JSX factory function used when targeting React JSX emit, e.g. \'React.createElement\' or \'h\'. */\n\n\xa0 \xa0 // "jsxFragmentFactory": "", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. \'React.Fragment\' or \'Fragment\'. */\n\n\xa0 \xa0 // "jsxImportSource": "", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Specify module specifier used to import the JSX factory functions when using \'jsx: react-jsx*\'. */\n\n\xa0 \xa0 // "reactNamespace": "", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Specify the object invoked for \'createElement\'. This only applies when targeting \'react\' JSX emit. */\n\n\xa0 \xa0 // "noLib": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Disable including any library files, including the default lib.d.ts. */\n\n\xa0 \xa0 // "useDefineForClassFields": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Emit ECMAScript-standard-compliant class fields. */\n\n\xa0 \xa0 // "moduleDetection": "auto", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Control what method is used to detect module-format JS files. */\n\n  \n\n\xa0 \xa0 /* Modules */\n\n\xa0 \xa0 "module": "commonjs", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Specify what module code is generated. */\n\n\xa0 \xa0 "rootDir": "./src", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Specify the root folder within your source files. */\n\n\xa0 \xa0 // "moduleResolution": "node10", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Specify how TypeScript looks up a file from a given module specifier. */\n\n\xa0 \xa0 // "baseUrl": "./", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Specify the base directory to resolve non-relative module names. */\n\n\xa0 \xa0 // "paths": {}, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Specify a set of entries that re-map imports to additional lookup locations. */\n\n\xa0 \xa0 // "rootDirs": [], \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Allow multiple folders to be treated as one when resolving modules. */\n\n\xa0 \xa0 // "typeRoots": [], \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Specify multiple folders that act like \'./node_modules/@types\'. */\n\n\xa0 \xa0 // "types": [], \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Specify type package names to be included without being referenced in a source file. */\n\n\xa0 \xa0 // "allowUmdGlobalAccess": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Allow accessing UMD globals from modules. */\n\n\xa0 \xa0 // "moduleSuffixes": [], \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* List of file name suffixes to search when resolving a module. */\n\n\xa0 \xa0 // "allowImportingTsExtensions": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Allow imports to include TypeScript file extensions. Requires \'--moduleResolution bundler\' and either \'--noEmit\' or \'--emitDeclarationOnly\' to be set. */\n\n\xa0 \xa0 // "resolvePackageJsonExports": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Use the package.json \'exports\' field when resolving package imports. */\n\n\xa0 \xa0 // "resolvePackageJsonImports": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Use the package.json \'imports\' field when resolving imports. */\n\n\xa0 \xa0 // "customConditions": [], \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Conditions to set in addition to the resolver-specific defaults when resolving imports. */\n\n\xa0 \xa0 // "resolveJsonModule": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Enable importing .json files. */\n\n\xa0 \xa0 // "allowArbitraryExtensions": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Enable importing files with any extension, provided a declaration file is present. */\n\n\xa0 \xa0 // "noResolve": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Disallow \'import\'s, \'require\'s or \'<reference>\'s from expanding the number of files TypeScript should add to a project. */\n\n  \n\n\xa0 \xa0 /* JavaScript Support */\n\n\xa0 \xa0 // "allowJs": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Allow JavaScript files to be a part of your program. Use the \'checkJS\' option to get errors from these files. */\n\n\xa0 \xa0 // "checkJs": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Enable error reporting in type-checked JavaScript files. */\n\n\xa0 \xa0 // "maxNodeModuleJsDepth": 1, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Specify the maximum folder depth used for checking JavaScript files from \'node_modules\'. Only applicable with \'allowJs\'. */\n\n  \n\n\xa0 \xa0 /* Emit */\n\n\xa0 \xa0 // "declaration": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Generate .d.ts files from TypeScript and JavaScript files in your project. */\n\n\xa0 \xa0 // "declarationMap": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Create sourcemaps for d.ts files. */\n\n\xa0 \xa0 // "emitDeclarationOnly": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Only output d.ts files and not JavaScript files. */\n\n\xa0 \xa0// \u8c03\u8bd5\u4ee3\u7801\u7684\u65f6\u5019\u4f7f\u7528\n\n\xa0 \xa0 "sourceMap": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Create source map files for emitted JavaScript files. */\n\n\xa0 \xa0 // "inlineSourceMap": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Include sourcemap files inside the emitted JavaScript. */\n\n\xa0 \xa0 // "outFile": "./", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Specify a file that bundles all outputs into one JavaScript file. If \'declaration\' is true, also designates a file that bundles all .d.ts output. */\n\n\xa0 \xa0 // javascript\u4ee3\u7801\u653e\u7f6e\u7684\u4f4d\u7f6e\n\n\xa0 \xa0 "outDir": "./dist", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Specify an output folder for all emitted files. */\n\n\xa0 \xa0 // \u751f\u6210\u7684javascript\u4ee3\u7801\u6ca1\u6709\u6ce8\u91ca\uff0c\u4ee3\u7801\u66f4\u77ed\u4e00\u4e9b\n\n\xa0 \xa0 "removeComments": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Disable emitting comments. */\n\n\xa0 \xa0 // "noEmit": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Disable emitting files from a compilation. */\n\n\xa0 \xa0 // "importHelpers": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Allow importing helper functions from tslib once per project, instead of including them per-file. */\n\n\xa0 \xa0 // "downlevelIteration": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Emit more compliant, but verbose and less performant JavaScript for iteration. */\n\n\xa0 \xa0 // "sourceRoot": "", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Specify the root path for debuggers to find the reference source code. */\n\n\xa0 \xa0 // "mapRoot": "", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Specify the location where debugger should locate map files instead of generated locations. */\n\n\xa0 \xa0 // "inlineSources": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Include source code in the sourcemaps inside the emitted JavaScript. */\n\n\xa0 \xa0 // "emitBOM": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files. */\n\n\xa0 \xa0 // "newLine": "crlf", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Set the newline character for emitting files. */\n\n\xa0 \xa0 // "stripInternal": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Disable emitting declarations that have \'@internal\' in their JSDoc comments. */\n\n\xa0 \xa0 // "noEmitHelpers": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Disable generating custom helper functions like \'__extends\' in compiled output. */\n\n\xa0 \xa0 // \u5982\u679c\u7f16\u8bd1\u5668\u6709\u9519\u8bef\u5c31\u65e0\u6cd5\u751f\u6210javascript\u4ee3\u7801\n\n\xa0 \xa0 "noEmitOnError": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Disable emitting files if any type checking errors are reported. */\n\n\xa0 \xa0 // "preserveConstEnums": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Disable erasing \'const enum\' declarations in generated code. */\n\n\xa0 \xa0 // "declarationDir": "./", \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Specify the output directory for generated declaration files. */\n\n  \n\n\xa0 \xa0 /* Interop Constraints */\n\n\xa0 \xa0 // "isolatedModules": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Ensure that each file can be safely transpiled without relying on other imports. */\n\n\xa0 \xa0 // "verbatimModuleSyntax": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file\'s format based on the \'module\' setting. */\n\n\xa0 \xa0 // "isolatedDeclarations": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Require sufficient annotation on exports so other tools can trivially generate declaration files. */\n\n\xa0 \xa0 // "allowSyntheticDefaultImports": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Allow \'import x from y\' when a module doesn\'t have a default export. */\n\n\xa0 \xa0 "esModuleInterop": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables \'allowSyntheticDefaultImports\' for type compatibility. */\n\n\xa0 \xa0 // "preserveSymlinks": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */\n\n\xa0 \xa0 "forceConsistentCasingInFileNames": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Ensure that casing is correct in imports. */\n\n  \n\n\xa0 \xa0 /* Type Checking */\n\n\xa0 \xa0 "strict": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Enable all strict type-checking options. */\n\n\xa0 \xa0 // "noImplicitAny": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Enable error reporting for expressions and declarations with an implied \'any\' type. */\n\n\xa0 \xa0 // "strictNullChecks": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* When type checking, take into account \'null\' and \'undefined\'. */\n\n\xa0 \xa0 // "strictFunctionTypes": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */\n\n\xa0 \xa0 // "strictBindCallApply": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Check that the arguments for \'bind\', \'call\', and \'apply\' methods match the original function. */\n\n\xa0 \xa0 // "strictPropertyInitialization": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Check for class properties that are declared but not set in the constructor. */\n\n\xa0 \xa0 // "noImplicitThis": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Enable error reporting when \'this\' is given the type \'any\'. */\n\n\xa0 \xa0 // "useUnknownInCatchVariables": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Default catch clause variables as \'unknown\' instead of \'any\'. */\n\n\xa0 \xa0 // "alwaysStrict": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Ensure \'use strict\' is always emitted. */\n\n\xa0 \xa0 // "noUnusedLocals": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Enable error reporting when local variables aren\'t read. */\n\n\xa0 \xa0 // "noUnusedParameters": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Raise an error when a function parameter isn\'t read. */\n\n\xa0 \xa0 // "exactOptionalPropertyTypes": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Interpret optional property types as written, rather than adding \'undefined\'. */\n\n\xa0 \xa0 // "noImplicitReturns": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Enable error reporting for codepaths that do not explicitly return in a function. */\n\n\xa0 \xa0 // "noFallthroughCasesInSwitch": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Enable error reporting for fallthrough cases in switch statements. */\n\n\xa0 \xa0 // "noUncheckedIndexedAccess": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Add \'undefined\' to a type when accessed using an index. */\n\n\xa0 \xa0 // "noImplicitOverride": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Ensure overriding members in derived classes are marked with an override modifier. */\n\n\xa0 \xa0 // "noPropertyAccessFromIndexSignature": true, \xa0 \xa0 \xa0 /* Enforces using indexed accessors for keys declared using an indexed type. */\n\n\xa0 \xa0 // "allowUnusedLabels": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Disable error reporting for unused labels. */\n\n\xa0 \xa0 // "allowUnreachableCode": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Disable error reporting for unreachable code. */\n\n  \n\n\xa0 \xa0 /* Completeness */\n\n\xa0 \xa0 // "skipDefaultLibCheck": true, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0/* Skip type checking .d.ts files that are included with TypeScript. */\n\n\xa0 \xa0 "skipLibCheck": true \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 /* Skip type checking all .d.ts files. */\n\n\xa0 }\n\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"debug\u4ee3\u7801",children:"Debug\u4ee3\u7801"}),"\n",(0,i.jsx)(n.p,{children:"\u65b0\u5efalaunch.json\u6587\u4ef6\uff0c\u5728\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e00\u884c"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'\xa0"preLaunchTask": "tsc: build - tsconfig.json",\n'})}),"\n",(0,i.jsx)(n.h2,{id:"\u9519\u8bef\u89e3\u51b3\u65b9\u6848",children:"\xa0\u9519\u8bef\u89e3\u51b3\u65b9\u6848"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"ts\u9879\u76eevscode\u8b66\u544a--- \u627e\u4e0d\u5230\u6a21\u5757\u201cxxx\u201d\u3002\u4f60\u7684\u610f\u601d\u662f\u8981\u5c06 \u201cmoduleResolution\u201c \u9009\u9879\u8bbe\u7f6e\u4e3a \u201cnode\u201c\uff0c\u8fd8\u662f\u8981\u5c06\u522b\u540d\u6dfb\u52a0\u5230 \u201cpaths\u201c \u9009\u9879\u4e2d\n\u4fee\u6539tsconfig.json\u6587\u4ef6"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'"moduleResolution": "node",\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);